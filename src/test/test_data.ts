type IPv4 = `${number}.${number}.${number}.${number}`;
type IPv6 = `${string}:${string}:${string}`;  // i.e. must have at least two colons

type IPPair<T extends IPv4 | IPv6> = readonly [original: T, pseudonymised: T];

interface TestDataWithKey {
  readonly KEY: Buffer;
  readonly IPV4?: readonly IPPair<IPv4>[];
  readonly IPV6?: readonly IPPair<IPv6>[];
}


export const TEST_SETS: readonly TestDataWithKey[] = [
  // Obtained from:
  // Reference implementation (C++)
  // https://github.com/Yawning/cryptopan (Go)
  // https://github.com/UniStuttgart-VISUS/Sappan.CryptoPAn (C#)
  // https://metacpan.org/pod/IP::Anonymous (Perl)
  {
    // prettier-ignore
    KEY: Buffer.from([
      21, 34, 23, 141, 51, 164, 207, 128, 19, 10, 91, 22, 73, 144, 125, 16,
      216, 152, 143, 131, 121, 121, 101, 39, 98, 87, 76, 45, 42, 132, 34, 2,
    ]),
    IPV4: [
      // Originally from reference implementation (lexicographic order, dupes removed):
      ['128.11.68.132', '135.242.180.132'],
      ['129.118.74.4', '134.136.186.123'],
      ['130.132.252.244', '133.68.164.234'],
      ['141.223.7.43', '141.167.8.160'],
      ['141.233.145.108', '141.129.237.235'],
      ['152.163.225.39', '151.140.114.167'],
      ['156.29.3.236', '147.225.12.42'],
      ['165.247.96.84', '162.9.99.234'],
      ['166.107.77.190', '160.132.178.185'],
      ['192.102.249.13', '252.138.62.131'],
      ['192.215.32.125', '252.43.47.189'],
      ['192.233.80.103', '252.25.108.8'],
      ['192.41.57.43', '252.222.221.184'],
      ['193.150.244.223', '253.169.52.216'],
      ['195.205.63.100', '255.186.223.5'],
      ['198.200.171.101', '249.199.68.213'],
      ['198.26.132.101', '249.36.123.202'],
      ['198.36.213.5', '249.7.21.132'],
      ['198.51.77.238', '249.18.186.254'],
      ['199.217.79.101', '248.38.184.213'],
      ['202.49.198.20', '245.206.7.234'],
      ['203.12.160.252', '244.248.163.4'],
      ['204.184.162.189', '243.192.77.90'],
      ['204.202.136.230', '243.178.4.198'],
      ['204.29.20.4', '243.33.20.123'],
      ['205.178.38.67', '242.108.198.51'],
      ['205.188.147.153', '242.96.16.101'],
      ['205.188.248.25', '242.96.88.27'],
      ['205.245.121.43', '242.21.121.163'],
      ['207.105.49.5', '241.118.205.138'],
      ['207.135.65.238', '241.202.129.222'],
      ['207.155.9.214', '241.220.250.22'],
      ['207.188.7.45', '241.255.249.220'],
      ['207.25.71.27', '241.33.119.156'],
      ['207.33.151.131', '241.1.233.131'],
      ['208.147.89.59', '227.237.98.191'],
      ['208.234.120.210', '227.154.67.17'],
      ['208.28.185.184', '227.39.94.90'],
      ['208.52.56.122', '227.8.63.165'],
      ['209.12.231.7', '226.243.167.8'],
      ['209.238.72.3', '226.6.119.243'],
      ['209.246.74.109', '226.22.124.76'],
      ['209.68.60.238', '226.184.220.233'],
      ['209.85.249.6', '226.170.70.6'],
      ['212.120.124.31', '228.135.163.231'],
      ['212.146.8.236', '228.19.4.234'],
      ['212.186.227.154', '228.59.98.98'],
      ['212.204.172.118', '228.71.195.169'],
      ['212.206.130.201', '228.69.242.193'],
      ['216.148.237.145', '235.84.194.111'],
      ['216.157.30.252', '235.89.31.26'],
      ['216.184.159.48', '235.96.225.78'],
      ['216.227.10.221', '235.28.253.36'],
      ['216.254.18.172', '235.7.16.162'],
      ['216.32.132.250', '235.192.139.38'],
      ['216.35.217.178', '235.195.157.81'],
      ['24.0.250.221', '100.15.198.226'],
      ['24.13.62.231', '100.2.192.247'],
      ['24.14.213.138', '100.1.42.141'],
      ['24.5.0.80', '100.9.15.210'],
      ['24.7.198.88', '100.10.6.25'],
      ['24.94.26.44', '100.88.228.35'],
      ['38.15.67.68', '64.3.66.187'],
      ['4.3.88.225', '124.60.155.63'],
      ['63.14.55.111', '95.9.215.7'],
      ['63.195.241.44', '95.179.238.44'],
      ['63.97.7.140', '95.97.9.123'],
      ['64.14.118.196', '0.255.183.58'],
      ['64.34.154.117', '0.221.154.117'],
      ['64.39.15.238', '0.219.7.41'],
      // From C# implementation:
      ['129.69.205.36', '134.182.53.212'],
      ['129.69.215.37', '134.182.41.43'],
      ['127.0.0.1', '33.0.243.129'],
      // From Perl implementation:
      ['0.0.0.0', '120.255.240.1'],
      ['10.0.1.128', '117.15.1.129'],
      ['169.254.100.50', '169.251.68.45'],
      ['255.255.255.255', '206.120.97.255'],
    ],
    // From Go/C# implementations:
    IPV6: [
      ['::1', '78ff:f001:9fc0:20df:8380:b1f1:704:ed'],
      ['::2', '78ff:f001:9fc0:20df:8380:b1f1:704:ef'],
      ['::ffff', '78ff:f001:9fc0:20df:8380:b1f1:704:f838'],
      ['2001:db8::1', '4401:2bc:603f:d91d:27f:ff8e:e6f1:dc1e'],
      ['2001:db8::2', '4401:2bc:603f:d91d:27f:ff8e:e6f1:dc1c'],
    ],
  },

  // Obtained from:
  // https://github.com/schoenw/libanon (C)
  // https://github.com/wikimedia/analytics-libanon (fork of above)
  {
    // Key is derived from passphrase "testing" by concatenating SHA1("tes") and SHA1("ting"),
    // and taking the first 32 bytes (from 40 total).
    // Can also be found in `libanon/test/anon-key.1.out` (line 3).
    KEY: Buffer.from('d1c056a983786a38ca76a05cda240c7b86d7713693544000a0e6c4dd5b3dabdd', 'hex'),
    IPV4: [
      ['1.2.3.4', '236.157.211.10'],
      ['1.2.3.3', '236.157.211.12'],
      ['0.0.0.0', '237.113.211.225'],
      ['1.1.1.1', '236.159.20.242'],
      ['255.255.255.254', '0.0.127.6'],
      ['255.255.255.255', '0.0.127.7'],
      ['2.6.8.15', '238.6.10.23'],
      ['2.6.3.83', '238.6.7.179'],
      ['6.3.11.123', '233.3.231.131'],
      ['112.28.3.2', '136.126.15.210'],
      ['220.201.45.30', '61.17.221.254'],
    ],
    IPV6: [
      ['31d6:1be5:41bd:663c:3e9e:1005:1eec:6f01', 'cc29:fb1a:b9fd:613c:e68:a03b:1efd:961f'],
      ['5dc9:b9a:5699:45e4:3c33:2f50:a4d:2fca', 'a3cf:3bda:5768:b87b:ac8c:cc56:a43:5235'],
      ['2d70:77b8:119d:918:4165:78ae:2f24:1d00', 'dcce:77ba:d5ad:16df:c119:68b2:2f0a:2518'],
      ['17a3:638e:1942:258e:c87:4416:5298:4071', 'f7a3:94a6:da41:21f1:8fa6:bbe9:aa59:c001'],
      ['1c12:2019:e3f:648a:1689:65e9:1bcb:2436', 'fdf2:1602:ce3f:5a8a:5da9:597:e43b:1bce'],
      ['2cc:5582:1702:485c:4a77:5077:575c:1035', 'eecc:4a6d:2f3d:775b:cb88:ae6f:a8a2:6fc1'],
      ['bba:3c9d:5b3a:21de:2cf8:6578:2ae7:779f', 'e7bd:c302:a5f5:d85e:3308:768:2570:fa5f'],
      ['e22:869:6f4f:55f9:73d2:7795:3881:1671', 'e1ad:da60:80b0:bc67:c2c:7b50:3873:e40f'],
      ['827:7f95:2fe6:531f:d63:7bdf:323f:3ef6', 'e527:7fea:c099:b4df:4e9d:73ac:2d3f:eb06'],
      ['1e45:45f7:d60:36d0:1827:6b55:5dae:5741', 'fefb:a377:29d:3a2d:e8a6:eb59:a391:d621'],
      ['fffe:638:709:861::3', '1:ce05:ee9:971:7f1f:1f8:ec7:c05b'],
      ['fffe:638:709:861::4', '1:ce05:ee9:971:7f1f:1f8:ec7:c05f'],
      ['ffff:638:709:861::1', '0:e9f8:3928:f76e:3f:3fc6:135:ffa6'],
      ['ffff:638:709:861::2', '0:e9f8:3928:f76e:3f:3fc6:135:ffa5'],
      ['2001:638:709:861::1', 'd0f1:f603:8e9:98c:3f5f:1f9:ffcf:bf9f'],
      ['2001:638:709:861::2', 'd0f1:f603:8e9:98c:3f5f:1f9:ffcf:bf9d'],
      ['2001:638:709:861::3', 'd0f1:f603:8e9:98c:3f5f:1f9:ffcf:bf9c'],
      ['2001:638:709:861::4', 'd0f1:f603:8e9:98c:3f5f:1f9:ffcf:bf98'],
      ['2001:638:709:4::1', 'd0f1:f603:8e9:6cb:803f:3e39:f134:3fbe'],
      ['2001:638:709:4::2', 'd0f1:f603:8e9:6cb:803f:3e39:f134:3fbd'],
      ['2001:638:709:4::3', 'd0f1:f603:8e9:6cb:803f:3e39:f134:3fbc'],
      ['2001:638:709:4::4', 'd0f1:f603:8e9:6cb:803f:3e39:f134:3fbb'],
    ],
  },

  // Obtained from:
  // https://github.com/keiichishima/yacryptopan (Python)
  // https://metacpan.org/pod/IP::Anonymous (Perl)
  // https://github.com/pwood/cryptopan (Ruby)
  {
    // prettier-ignore
    KEY: Buffer.from([
      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
      16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
    ]),
    IPV4: [
      // From Python implementation:
      ['192.0.2.1', '2.90.93.17'],
      // From Perl implementation:
      ['0.0.0.0', '254.152.65.220'],
      ['10.0.1.128', '246.35.190.47'],
      ['127.0.0.1', '168.227.160.61'],
      ['165.254.100.50', '90.1.157.13'],
      ['255.255.255.255', '56.0.15.254'],
      // From Ruby implementation:
      ['148.88.132.153', '106.38.130.153'],
      ['148.88.132.64', '106.38.130.64'],
      ['148.88.133.200', '106.38.131.223'],
    ],
    IPV6: [
      // From Python implementation:
      ['2001:db8::1', 'dd92:2c44:3fc0:ff1e:7ff9:c7f0:8180:7e00'],
    ],
  },

  // Obtained from:
  // https://github.com/keiichishima/yacryptopan (Python) - `contrib/diekmann`
  {
    KEY: Buffer.from('8009ab3a605435bea0c385bea18485d8b0a1103d6590bdf48c968be5de53836e', 'hex'),
    IPV4: [
      ['123.123.123.123', '117.8.135.123'],
      ['131.159.1.42', '162.112.255.43'],
      ['8.8.8.8', '55.21.62.136'],
      ['255.8.1.100', '240.232.0.156'],
      ['0.0.0.0', '56.131.176.115'],
      ['255.255.255.255', '240.15.248.0'],
    ],
    IPV6: [
      ['2a02:0db8:85a3:0000:0000:8a2e:0370:7344','1482:f447:75b3:f1f9:fbdf:622e:34f:ff7b'],
      ['2a02:db8:85a3:0:0:8a2e:370:7344', '1482:f447:75b3:f1f9:fbdf:622e:34f:ff7b'],
      ['2a02:db8:85a3::8a2e:370:7344', '1482:f447:75b3:f1f9:fbdf:622e:34f:ff7b'],
      ['2a02:0db8:85a3:08d3:1319:8a2e:0370:7344', '1482:f447:75b3:f904:c1d9:ba2e:489:1346'],
      ['2001:b8:a3:00:00:2e:70:44', '1f18:b37b:1cc3:8118:41f:9fd1:f875:fab8'],
      ['::ffff:192.0.2.128', '3883:b073:ff0f:fff8:203f:7c8:617:fd01'],
      ['fc00::', 'f33c:8ca3:ef0f:e019:e7ff:f1e3:f91f:f800'],
    ],
  },

  // Obtained from:
  // https://github.com/keiichishima/yacryptopan (Python) - Readme example
  // https://github.com/certtools/cryptopanwrapper (Python) - Example/readme
  {
    KEY: Buffer.from('32-char-str-for-AES-key-and-pad.', 'latin1'),
    IPV4: [
      ['192.0.2.1', '192.0.125.244'],
    ],
    IPV6: [
      ['2001:db8::1', '27fe:8bc7:fee:1e:1e1f:f0fe:f0e1:83fd'],
    ],
  },

  // Obtained from:
  // https://github.com/pwood/cryptopan (Ruby) - Readme example
  {
    // prettier-ignore
    KEY: Buffer.from([
      27, 8, 236, 31, 47, 181, 230, 41, 198, 24, 254, 3, 151, 151, 200, 75,
      255, 197, 170, 3, 235, 236, 200, 41, 12, 10, 206, 127, 203, 162, 176, 206,
    ]),
    IPV4: [
      ['8.8.8.8', '50.54.20.240'],
      ['8.8.4.4', '50.54.28.11'],
    ]
  },

  // Obtained from:
  // https://github.com/JunjieChou/CryptoPAn (Java)
  {
    KEY: Buffer.from('wordlessthanfoursavecodefromboom', 'latin1'),
    IPV4: [
      ['199.32.34.122', '58.161.230.78'],
    ],
  },

  // Obtained from:
  // https://github.com/FFM/pycryptopan (Python)
  // https://github.com/ovarene/CryptoPan.jl (Julia)
  {
    KEY: Buffer.from('boojahyoo3vaeToong0Eijee7Ahz3yee', 'latin1'),
    IPV4: [
      ['192.0.2.1', '206.2.124.120'],
    ]
  },
];
